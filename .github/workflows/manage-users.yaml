name: Manage users CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: manage-users

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: manage-users/node_modules
          key: ${{runner.os}}-manage-users-${{hashFiles('manage-users/package-lock.json')}}
          restore-keys: |
            ${{runner.os}}-manage-users-

      - name: Install dependencies
        run: |
          npm ci

      - name: Create .env file
        run: |
          echo "UMS_MONGODB_URL=${{ secrets.UMS_MONGODB_URL }}" > .env
          echo "UMS_BASE_URL=${{ secrets.UMS_BASE_URL }}" >> .env
          echo "UMS_JWT_SECRET_KEY=${{ secrets.UMS_JWT_SECRET_KEY }}" >> .env

      - name: Build TypeScript code
        run: |
          npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: manage-users-build
          path: |
            manage-users/dist/
            manage-users/.env

  test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: manage-users

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: manage-users/node_modules
          key: ${{runner.os}}-manage-users-${{hashFiles('manage-users/package-lock.json')}}
          restore-keys: |
            ${{runner.os}}-manage-users-

      - name: Install dependencies
        run: |
          npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: manage-users-build
          path: manage-users/

      - name: Run tests
        run: |
          npm run test:ci

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: manage-users-coverage
          path: manage-users/coverage/
  
  dockerize-and-push:
    needs: test
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_TOKEN}}

    - name: Build Docker image
      run: |
        docker build -t ${{secrets.DOCKER_USERNAME}}/ita-manage-users .
        docker tag ${{secrets.DOCKER_USERNAME}}/ita-manage-users ${{secrets.DOCKER_USERNAME}}/ita-manage-users:${{github.sha}}

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{secrets.DOCKER_USERNAME}}/ita-manage-users
        docker push ${{secrets.DOCKER_USERNAME}}/ita-manage-users:${{github.sha}}
